<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hadoop 环境配置</title>
    <url>/2024/01/10/Hadoop%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="主要步骤">主要步骤</h2>
<h3 id="一、准备虚拟机">一、准备虚拟机</h3>
<p>首先要创建五台一模一样的Ubuntu虚拟机，可在VMware中先安装一个Ubuntu虚拟机，然后克隆出另外四个虚拟机。</p>
<h3 id="二、搭建集群">二、搭建集群</h3>
<h4 id="1-修改hostname">1.修改hostname</h4>
<p>现在有五台虚拟机，改hostname：将其中一台改作master，其余分别改作slave1、slave2、slave3、slave4。让其处于同一局域网中。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/hostname</span><br></pre></td></tr></table></figure></div>
<p>修改后保存。</p>
<h4 id="2-记录五台虚拟机的IP地址">2.记录五台虚拟机的IP地址</h4>
<p>在终端输入<code>ipconfig</code>，可以得到本节点IP。最终可以得到：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.242.129	master</span><br><span class="line">192.168.242.130	slave1</span><br><span class="line">192.168.242.131	slave2</span><br><span class="line">192.168.242.132	slave3</span><br><span class="line">192.168.242.133	slave4</span><br></pre></td></tr></table></figure></div>
<p>接下来修改节点IP映射，在每台虚拟机的<code>hosts</code>文件末尾添加上述<code>IP-主机名</code>映射（重启后生效）：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/hosts  </span><br></pre></td></tr></table></figure></div>
<h4 id="3-ping通五台虚拟机">3.ping通五台虚拟机</h4>
<p>利用刚刚记录下来的IP地址，五台虚拟机互相ping通：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ping IP地址/主机名</span><br></pre></td></tr></table></figure></div>
<h4 id="4-配置SSH免密登录">4.配置SSH免密登录</h4>
<p>首先安装SSH：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server  #安装服务，一路回车                     </span><br><span class="line">sudo /etc/init.d/ssh restart  #启动服务                                      </span><br><span class="line">sudo ufw disable   #关闭防火墙     </span><br></pre></td></tr></table></figure></div>
<p>关闭完防火墙，接下来查看是否开通SSH服务：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ps -e | grep ssh</span><br></pre></td></tr></table></figure></div>
<p>只要出现了以下进程就说明成功了：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2023/10/18/arKLqu23wdTIgbD.png"
                      alt=""
                ></p>
<p>接下来在master节点生成SSH公钥，公钥储存在 <code>/root/.ssh</code> 中</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cd /root/.ssh  </span><br><span class="line">rm ./id_rsa*            # 删除之前生成的公匙（如果有）                  </span><br><span class="line">ssh-keygen -t rsa       # 一直按回车就可以     </span><br></pre></td></tr></table></figure></div>
<p>让master 节点可以无密码 SSH 本机，在 master 节点上执行以下代码：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cat ./id_rsa.pub &gt;&gt; ./authorized_keys</span><br></pre></td></tr></table></figure></div>
<p>完成后可执行<code>ssh master</code>验证一下（需要输入 <code>yes</code>，成功后执行 <code>exit</code> 返回原来的终端）</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh master</span><br></pre></td></tr></table></figure></div>
<p>接着在 master 节点将上述公匙传输到 slave1 节点，过程中需要输入 slave1 节点的密码，传输100%以后就是传过去了：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">scp ./.ssh/id_rsa.pub xpk@slave1:/home/xpk</span><br></pre></td></tr></table></figure></div>
<p>接着在 slave1 节点上，把 master 节点的公钥加入授权：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir ~/.ssh        # 如果不存在该文件夹需先创建，若已存在则忽略        </span><br><span class="line">cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys                                   </span><br><span class="line">rm ~/id_rsa.pub    # 用完就可以删掉了</span><br></pre></td></tr></table></figure></div>
<p>在其余 slave 节点重复以上步骤，然后就可以免密码SSH所有 slave 节点了：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2023/10/18/2NYJbqB8ytKh3zZ.png"
                      alt=""
                ></p>
<p>最后在 master 节点修改SSH文件权限（否则之后SSH免密登录可能失效）：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 700 /root/.ssh/	#修改 .ssh/ 文件夹权限为700</span><br><span class="line">chmod 600 /root/.ssh/authorized_keys 	#修改 authorized_keys 文件权限为700</span><br></pre></td></tr></table></figure></div>
<h4 id="5-安装配置JDK环境变量">5.安装配置JDK环境变量</h4>
<h5 id="下载JDK">下载JDK</h5>
<p>官网： <a class="link"   href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" >https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>我下载的是 JDK1.8 ，压缩文件名为<code>jdk-8u391-linux-x64.tar.gz</code>。</p>
<h5 id="解压tar包">解压tar包</h5>
<p>把安装包放到 <code>/usr/local/java/</code> 目录下面（没有java目录的话自行创建），然后解压安装包：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建目录</span></span><br><span class="line">mkdir -p /usr/local/java/	</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解压</span></span><br><span class="line">tar -zxvf  安装包名称	</span><br></pre></td></tr></table></figure></div>
<h5 id="配置JDK环境变量">配置JDK环境变量</h5>
<p>修改 environment 文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改文件</span></span><br><span class="line">sudo gedit /etc/environment</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件尾部添加如下配置</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">java</span></span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_391</span><br><span class="line">export JRE_HOME=/usr/local/java/jdk1.8.0_391/jre</span><br><span class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</span><br></pre></td></tr></table></figure></div>
<p>修改 profile 文件：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改文件</span></span><br><span class="line">sudo gedit /etc/profile </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件尾部添加如下配置</span></span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_391</span><br><span class="line">export JRE_HOME=/usr/local/java/jdk1.8.0_391/jre</span><br><span class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin</span><br></pre></td></tr></table></figure></div>
<p>配置立即生效：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">立即生效</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></div>
<p>检查Java命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看java版本</span></span><br><span class="line">java -version</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示如下表示成功</span></span><br><span class="line">java version &quot;1.8.0_391&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_391-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.391-b13, mixed mode)</span><br></pre></td></tr></table></figure></div>
<h4 id="6-安装和配置Hadoop">6.安装和配置Hadoop</h4>
<h5 id="下载Hadoop安装包">下载Hadoop安装包</h5>
<p>Hadoop官网：<a class="link"   href="http://hadoop.apache.org/" >http://hadoop.apache.org/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>我下载的是 hadoop3 ，压缩文件名为<code>hadoop-3.3.6.tar.gz</code>。</p>
<h5 id="解压Hadoop安装包（只在master做）">解压Hadoop安装包（只在master做）</h5>
<p>把 Hadoop 压缩包放置到<code>/opt/hadoop</code>目录内，然后在 master 主机上执行以下代码：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /opt/hadoop</span><br></pre></td></tr></table></figure></div>
<p>进入<code>/opt/hadoop</code>目录后，执行解压缩命令：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf hadoop-3.3.6.tar.gz</span><br></pre></td></tr></table></figure></div>
<h5 id="配置env文件（只在master做）">配置env文件（只在master做）</h5>
<p>执行命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/hadoop-env.sh</span><br></pre></td></tr></table></figure></div>
<p>找到<code>export JAVA_HOME</code>这行，修改为：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java/jdk1.8.0_391/</span><br></pre></td></tr></table></figure></div>
<h5 id="配置核心组件文件（只在master做）">配置核心组件文件（只在master做）</h5>
<p>Hadoop 的核心组件文件是<code>core-site.xml</code>，位于<code>/opt/hadoop/hadoop/etc/hadoop</code>子目录下，将下面的配置代码放在文件的<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间。</p>
<p>执行编辑<code>core-site.xml</code>文件的命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/core-site.xml</span><br></pre></td></tr></table></figure></div>
<p>需要在<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间加入的代码：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">		&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">		&lt;value&gt;hdfs://master:9000&lt;/value&gt;</span><br><span class="line">	&lt;/property&gt;</span><br><span class="line">	&lt;property&gt;</span><br><span class="line">		&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">		&lt;value&gt;/opt/hadoop/hadoopdata&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></div>
<p>编辑完成后，退出并保存即可。</p>
<h5 id="配置文件系统（只在master做）">配置文件系统（只在master做）</h5>
<p>Hadoop 的文件系统配置文件是<code>hdfs-site.xml</code>，位于<code>/opt/hadoop/hadoop/etc/hadoop</code>子目录下，将以下代码放在文件的<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间。</p>
<p>执行编辑<code>hdfs-site.xml</code>文件的命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/hdfs-site.xml</span><br></pre></td></tr></table></figure></div>
<p>需要在<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间加入的代码：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">		&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">		&lt;value&gt;1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></div>
<p>编辑完成后，退出保存即可。</p>
<h5 id="配置yarn-site-xml文件（只在master做）">配置yarn-site.xml文件（只在master做）</h5>
<p>yarn 的站点配置文件是<code>yarn-site.xml</code>，位于<code>/opt/hadoop/hadoop/etc/hadoop</code>子目录下，将以下代码放在文件的<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间。</p>
<p>执行编辑<code>yarn-site.xml</code>文件的命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/yarn-site.xml</span><br></pre></td></tr></table></figure></div>
<p>需要在<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间加入的代码：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;master:18040&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;master:18030&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;master:18025&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;master:18141&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;master:18088&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></div>
<h5 id="配置MapReduce计算框架文件（只在master做）">配置MapReduce计算框架文件（只在master做）</h5>
<p>配置文件是<code>mapred-site.xml</code>，在<code>/opt/hadoop/hadoop/etc/hadoop</code>子目录下，将下面的代码填充到文件的<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间。</p>
<p>执行命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/mapred-site.xml</span><br></pre></td></tr></table></figure></div>
<p>需要在<code>&lt;configuration&gt;</code>和<code>&lt;/configuration&gt;</code>之间加入的代码：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">		&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">		&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure></div>
<p>编辑完毕，保存退出即可。</p>
<h5 id="配置master的workers文件（只在master做）">配置master的workers文件（只在master做）</h5>
<p>workers 文件给出了 Hadoop 集群的 slave 节点列表，该文件十分重要，因为启动 Hadoop 的时候，系统总是根据当前workers 文件中的 slave 节点名称列表启动集群，不在列表中的 slave 节点便不会被视为计算节点。</p>
<p>执行编辑 workers 文件命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/workers</span><br></pre></td></tr></table></figure></div>
<p>加入以下代码：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br><span class="line">slave3</span><br><span class="line">slave4</span><br></pre></td></tr></table></figure></div>
<p>注意：删除 workers 文件中原来 localhost 那一行。</p>
<h5 id="复制master上的Hadoop到slave节点（只在master做）">复制master上的Hadoop到slave节点（只在master做）</h5>
<p>通过复制master节点上的 Hadoop ，能够大大提高系统部署效率。由于我这里有4个 slave 节点，所以复制4次。</p>
<p>复制命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">scp -r /opt/hadoop root@slave1:/opt</span><br><span class="line">scp -r /opt/hadoop root@slave2:/opt</span><br><span class="line">scp -r /opt/hadoop root@slave3:/opt</span><br><span class="line">scp -r /opt/hadoop root@slave4:/opt</span><br></pre></td></tr></table></figure></div>
<h5 id="配置操作系统环境变量（五个节点都做）">配置操作系统环境变量（五个节点都做）</h5>
<p>回到用户目录命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/hadoop</span><br></pre></td></tr></table></figure></div>
<p>然后编辑<code>.bash_profile</code>文件，命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.bash_profile</span><br></pre></td></tr></table></figure></div>
<p>最后把以下代码追加到文件的尾部：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#HADOOP</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/opt/hadoop/hadoop</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></div>
<p>保存退出后，执行命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></div>
<p><code>source ~/.bash_profile</code>命令是使上述配置生效。</p>
<p>提示：在其余 slave 节点使用上述相同的配置方法，配置全部 slave 节点。</p>
<h5 id="创建Hadoop数据目录（只在master做）">创建Hadoop数据目录（只在master做）</h5>
<p>创建数据目录，命令是：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /opt/hadoop/hadoopdata</span><br></pre></td></tr></table></figure></div>
<h5 id="格式化文件系统（只在master做）">格式化文件系统（只在master做）</h5>
<p>执行格式化文件系统命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">hadoop namenode -format</span><br></pre></td></tr></table></figure></div>
<h3 id="三、Hadoop集群的启动与关闭">三、Hadoop集群的启动与关闭</h3>
<h4 id="1-启动和关闭Hadoop集群（只在master做）">1.启动和关闭Hadoop集群（只在master做）</h4>
<p>首先进入安装主目录，命令是：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/hadoop/hadoop/sbin</span><br></pre></td></tr></table></figure></div>
<p>然后启动，命令是：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">./start-all.sh</span><br></pre></td></tr></table></figure></div>
<p>如果要关闭 Hadoop 集群，可以使用命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">./stop-all.sh</span><br></pre></td></tr></table></figure></div>
<h4 id="2-验证Hadoop集群是否启动成功">2.验证Hadoop集群是否启动成功</h4>
<p>在 master 节点的浏览器中输入<code>localhost:9870/</code>并回车。打开 HDFS 面板查看详细信息：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/10/PHrsxtvNiIFGmkT.png"
                      alt=""
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/10/x4uYlirEd5U2hgy.png"
                      alt=""
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/10/zUywuYjHvRTX3sa.png"
                      alt=""
                ></p>
<h3 id="参考资料：">参考资料：</h3>
<p><a class="link"   href="https://blog.csdn.net/weixin_52105111/article/details/123159877" >三台Ubuntu虚拟机搭建 Hadoop集群 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://blog.51cto.com/u_12835254/5273118" >Linux：Ubuntu配置jdk环境变量 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://blog.csdn.net/weixin_44198965/article/details/89603788?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164601575316780271530136%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164601575316780271530136&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-89603788.pc_search_result_cache&amp;utm_term=hadoop%E5%AE%89%E8%A3%85&amp;spm=1018.2226.3001.4187" >Hadoop安装与配置详细教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="遇到的-问题-解决方法">遇到的 问题&amp;解决方法</h2>
<h3 id="一、部分Ubuntu虚拟机无法连接网络">一、部分Ubuntu虚拟机无法连接网络</h3>
<h4 id="问题：">问题：</h4>
<p>安装之后可以正常使用，但是隔了一段时间再上就发现有一两台虚拟机连不上网络。</p>
<h4 id="解决：">解决：</h4>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo service NetworkManager stop</span><br><span class="line">sudo <span class="built_in">rm</span> /var/lib/NetworkManager/NetworkManager.state</span><br><span class="line">sudo service NetworkManager start</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/NetworkManager/NetworkManager.conf	<span class="comment">#把false改成true</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo service NetworkManager restart</span><br></pre></td></tr></table></figure></div>
<h4 id="参考资料：-2">参考资料：</h4>
<p><a class="link"   href="https://blog.csdn.net/lj695242104/article/details/80922108" >ubuntu 18.04 网络图标不见的问题解决方案 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="二、第一次运行Hadoop时，出现以下报错：">二、第一次运行Hadoop时，出现以下报错：</h3>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">ERROR: Attempting to operate on hdfs namenode as root</span><br><span class="line">ERROR: but there is no HDFS_NAMENODE_USER defined. </span><br><span class="line">Aborting operation.</span><br><span class="line">Starting datanodes</span><br><span class="line">ERROR: Attempting to operate on hdfs datanode as root</span><br><span class="line">ERROR: but there is no HDFS_DATANODE_USER defined. </span><br><span class="line">Aborting operation.</span><br><span class="line">Starting secondary namenodes</span><br><span class="line">ERROR: Attempting to operate on hdfs secondarynamenode as root</span><br><span class="line">ERROR: but there is no HDFS_SECONDARYNAMENODE_USER defined. </span><br><span class="line">Aborting operation.</span><br></pre></td></tr></table></figure></div>
<h4 id="解决：-2">解决：</h4>
<p>在<code>$HADOOP_HOME/etc/hadoop/hadoop-env.sh</code>中添加以下内容：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HDFS_NAMENODE_USER=root</span><br><span class="line"><span class="built_in">export</span> HDFS_DATANODE_USER=root</span><br><span class="line"><span class="built_in">export</span> HDFS_SECONDARYNAMENODE_USER=root</span><br><span class="line"><span class="built_in">export</span> YARN_RESOURCEMANAGER_USER=root</span><br><span class="line"><span class="built_in">export</span> YARN_NODEMANAGER_USER=root</span><br></pre></td></tr></table></figure></div>
<h4 id="参考资料：-3">参考资料：</h4>
<p><a class="link"   href="https://stackoverflow.com/questions/48129029/hdfs-namenode-user-hdfs-datanode-user-hdfs-secondarynamenode-user-not-defined" >HDFS_NAMENODE_USER, HDFS_DATANODE_USER &amp; HDFS_SECONDARYNAMENODE_USER not defined <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="三、主节点启动成功，从节点没有启动">三、主节点启动成功，从节点没有启动</h3>
<h4 id="解决：-3">解决：</h4>
<p>执行编辑 workers 文件命令：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gedit /opt/hadoop/hadoop/etc/hadoop/workers</span><br></pre></td></tr></table></figure></div>
<p>加入以下代码：</p>
<div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br><span class="line">slave3</span><br><span class="line">slave4</span><br></pre></td></tr></table></figure></div>
<h4 id="原因分析：">原因分析：</h4>
<p>网上教程用的是Hadoop 2 版本，配置 slave 节点列表文件时修改的是<code>slaves</code>文件；而我使用的是 Hadoop 3 版本，Hadoop 3 版本里的配置文件需要修改<code>workers</code>文件，而不是<code>slaves</code>文件。</p>
<h4 id="参考资料：-4">参考资料：</h4>
<p><a class="link"   href="https://blog.51cto.com/u_16099172/6391674" >hadoop从节点进程缺失 hadoop从节点没有启动 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>MapReduce 配置与操作</title>
    <url>/2024/01/11/MapReduce%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h3 id="一、通过eclipse连接hadoop">一、通过eclipse连接hadoop</h3>
<h4 id="1-主要步骤">1. 主要步骤</h4>
<ul>
<li>
<p>安装eclipse</p>
</li>
<li>
<p>安装Hadoop-Eclipse-Plugin</p>
</li>
<li>
<p>配置Hadoop-Eclipse-Plugin</p>
</li>
</ul>
<p>参考资料已给出此部分详细步骤，因此此处不再展开，仅给出实现效果如下：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2023/11/17/5e8bfMxDjoOsPVL.png"
                      style="zoom: 67%;" 
                >
<h4 id="2-参考资料">2. 参考资料</h4>
<ul>
<li><a class="link"   href="https://blog.csdn.net/u010185220/article/details/79095179" >windows10上使用Eclipse配置Hadoop开发环境详细步骤+WordCount示例 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h4 id="3-遇到的问题">3. 遇到的问题</h4>
<ul>
<li>
<h5 id="新添加的插件在Eclipse中不显示">新添加的插件在Eclipse中不显示</h5>
<ul>
<li>
<p>解决方法</p>
<p>在 <code>eclipse/configuration</code> 目录下的 <code>config.ini</code> 文件中加入一行 : <code>osgi.checkConfiguration=true</code>，这样它就会寻找并安装插件。</p>
</li>
<li>
<p>参考资料</p>
<p><a class="link"   href="https://blog.csdn.net/qq_38789941/article/details/86244990" >Eclipse 安装插件后不显示的解决办法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
</li>
</ul>
<h3 id="二、WordCount示例">二、WordCount示例</h3>
<h4 id="1-主要步骤-2">1. 主要步骤</h4>
<p>参考资料已给出此部分详细步骤，因此此处仅列举出主要步骤。</p>
<ul>
<li>
<p>新建项目</p>
</li>
<li>
<p>在项目的src目录下创建<code>WordCount.java</code>类，内容如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> Package;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCount</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TokenizerMapper</span> <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;Object, Text, Text, IntWritable&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">IntWritable</span> <span class="variable">one</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="type">Text</span> <span class="variable">word</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Text</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">map</span><span class="params">(Object key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">            <span class="type">StringTokenizer</span> <span class="variable">itr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(value.toString());</span><br><span class="line">            <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class="line">                word.set(itr.nextToken());</span><br><span class="line">                context.write(word, one);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">IntSumReducer</span> <span class="keyword">extends</span> <span class="title class_">Reducer</span>&lt;Text, IntWritable, Text, IntWritable&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">IntWritable</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntWritable</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, Context context)</span></span><br><span class="line">                <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (IntWritable val : values) &#123;</span><br><span class="line">                sum += val.get();</span><br><span class="line">            &#125;</span><br><span class="line">            result.set(sum);</span><br><span class="line">            context.write(key, result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">conf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>();</span><br><span class="line">        String[] otherArgs = <span class="keyword">new</span> <span class="title class_">GenericOptionsParser</span>(conf, args).getRemainingArgs();</span><br><span class="line">        <span class="keyword">if</span> (otherArgs.length != <span class="number">2</span>) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Usage: wordcount &lt;in&gt; &lt;out&gt;&quot;</span>);</span><br><span class="line">            System.exit(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;deprecation&quot;)</span></span><br><span class="line">		<span class="type">Job</span> <span class="variable">job</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Job</span>(conf, <span class="string">&quot;word count&quot;</span>);</span><br><span class="line">        job.setJarByClass(WordCount.class);</span><br><span class="line">        job.setMapperClass(TokenizerMapper.class);</span><br><span class="line">        job.setCombinerClass(IntSumReducer.class);</span><br><span class="line">        job.setReducerClass(IntSumReducer.class);</span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line">        FileInputFormat.addInputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(otherArgs[<span class="number">0</span>]));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> <span class="title class_">Path</span>(otherArgs[<span class="number">1</span>]));</span><br><span class="line">        System.exit(job.waitForCompletion(<span class="literal">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>在项目的src目录下创建<code>log4j.properties</code>文件，内容如下：</p>
<div class="highlight-container" data-rel="Properties"><figure class="iseeu highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Configure logging for testing:optionally with log file </span></span><br><span class="line"><span class="comment">#log4j.rootLogger=debug,appender </span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">info,appender </span></span><br><span class="line"><span class="comment">#log4j.rootLogger=error,appender </span></span><br><span class="line"><span class="comment">#\u8F93\u51FA\u5230\u63A7\u5236\u53F0 </span></span><br><span class="line"><span class="attr">log4j.appender.appender</span>=<span class="string">org.apache.log4j.ConsoleAppender </span></span><br><span class="line"><span class="comment">#\u6837\u5F0F\u4E3ATTCCLayout </span></span><br><span class="line"><span class="attr">log4j.appender.appender.layout</span>=<span class="string">org.apache.log4j.TTCCLayout</span></span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>配置运行参数</p>
</li>
<li>
<p>运行</p>
</li>
</ul>
<h4 id="2-运行结果">2. 运行结果</h4>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2023/11/17/o6ERhliMpC85qPm.png"
                      alt=""
                ></p>
<p>其中，<code>word.txt</code> 文件内容如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">a</span><br><span class="line">a</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line">b</span><br><span class="line">b</span><br><span class="line">b</span><br><span class="line"></span><br><span class="line">c</span><br><span class="line">c</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line"></span><br><span class="line">hello hadoop !</span><br><span class="line">hello world !</span><br></pre></td></tr></table></figure></div>
<p>程序输出 <code>hdfs://192.168.242.129:9000/hadoop-user/output.txt/part-r-00000</code> 文件内容如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">!	2</span><br><span class="line">a	3</span><br><span class="line">b	3</span><br><span class="line">c	3</span><br><span class="line">d	1</span><br><span class="line">e	1</span><br><span class="line">f	1</span><br><span class="line">hadoop	1</span><br><span class="line">hello	2</span><br><span class="line">world	1</span><br></pre></td></tr></table></figure></div>
<p>词频统计结果无误。</p>
<h4 id="3-参考资料">3. 参考资料</h4>
<ul>
<li><a class="link"   href="https://cwiki.apache.org/confluence/display/HADOOP2/WordCount" >WordCount Example <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/u010185220/article/details/79095179" >windows10上使用Eclipse配置Hadoop开发环境详细步骤+WordCount示例 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h4 id="4-遇到的问题">4. 遇到的问题</h4>
<ul>
<li>
<h5 id="环境变量问题">环境变量问题</h5>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.lang.RuntimeException: java.io.FileNotFoundException: java.io.FileNotFoundException: HADOOP_HOME and hadoop.home.dir are unset.</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>问题分析</p>
<p>从错误信息中可以看到，Hadoop在执行<code>Shell.getWinUtilsPath</code>的时候抛出了异常。这是因为Hadoop在进行某些本地文件系统操作时，依赖于一些环境变量，其中包括<code>HADOOP_HOME</code>。这两个变量都没有被正确设置，导致了<code>FileNotFoundException</code>。</p>
</li>
<li>
<p>解决方法</p>
<p>在项目运行配置中指定<code>HADOOP_HOME</code>环境变量及其值：<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2023/11/17/3dmlWo9A8LMwkSU.png"
                      alt=""
                ></p>
</li>
<li>
<p>参考资料</p>
<ul>
<li><a class="link"   href="https://cwiki.apache.org/confluence/display/HADOOP2/WindowsProblems" >Problems running Hadoop on Windows <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
</ul>
</li>
<li>
<h5 id="权限错误问题">权限错误问题</h5>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">[Thread-5] WARN org.apache.hadoop.mapred.LocalJobRunner - job_local2147375942_0001</span><br><span class="line">org.apache.hadoop.security.AccessControlException: Permission denied: user=23876, access=WRITE, inode=&quot;/hadoop-user&quot;:root:supergroup:drwxr-xr-x</span><br><span class="line">[main] INFO org.apache.hadoop.mapreduce.Job - Job job_local2147375942_0001 failed with state FAILED due to: NA</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>问题分析</p>
<p>这个错误表明在本地运行作业时，用户尝试写入目录<code>/hadoop-user</code>时遇到权限问题，并导致作业以失败结束。</p>
</li>
<li>
<p>解决方法</p>
<p>在master节点中执行以下代码，以赋予当前用户对目标HDFS文件夹的写权限：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod -R 777 /hadoop-user/</span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>参考资料</p>
<ul>
<li><a class="link"   href="https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_permissions_guide.html#%E8%B6%85%E7%BA%A7%E7%94%A8%E6%88%B7" >HDFS权限管理用户指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.cnblogs.com/yinzhengjie2020/p/13737254.html" >HDFS权限管理篇-博客园 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>MapReduce</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 报错：SSH连接超时</title>
    <url>/2024/01/19/Git%E6%8A%A5%E9%94%99-SSH%E8%BF%9E%E6%8E%A5%E8%B6%85%E6%97%B6/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>使用 Git 向 GitHub 部署代码时，报错如下（此前正常）：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line">Please make sure you have the correct access rights and the repository exists.</span><br></pre></td></tr></table></figure></div>
<h2 id="原因">原因</h2>
<p>SSH 端口被占用，重新指定一个端口即可。</p>
<p>注：<em>Windows 系统查看端口占用情况的命令为：<code>netstat -ano | findStr 端口号</code></em></p>
<h2 id="解决">解决</h2>
<ul>
<li>
<p>打开 <code>C:\用户\主机名\.ssh</code> 文件夹</p>
</li>
<li>
<p>新建 <code>config</code> 文件（不带后缀）</p>
</li>
<li>
<p>输入以下内容后保存：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User GitHub注册邮箱</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>在 Git Bash 执行：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></div>
<p>出现询问是否连接的提示，输入 <code>yes</code> 回车：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">The authenticity of host &#x27;[ssh.github.com]:443 ([20.205.243.160]:443)&#x27; can&#x27;t be established.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;[ssh.github.com]:443&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">Hi x-Parker! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></div>
<p>成功重新建立 SSH 连接。</p>
</li>
</ul>
<h2 id="另解">另解</h2>
<p>抛弃 SSH 连接方式，使用 HTTPS 连接 Github。</p>
<h2 id="参考">参考</h2>
<ul>
<li><a class="link"   href="https://blog.csdn.net/yunxiaobaobei/article/details/123474599" >https://blog.csdn.net/yunxiaobaobei/article/details/123474599 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/weixin_41287260/article/details/124368189" >https://blog.csdn.net/weixin_41287260/article/details/124368189 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell 报错：在此系统上禁止运行脚本</title>
    <url>/2024/01/22/PowerShell-vue%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E6%96%87%E4%BB%B6-%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>在 Windows PowerShell （管理员模式下）执行 <code>vue --version</code> 命令时报错如下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/22/IBWcwtCLqjm2ya3.png"
                      alt=""
                ></p>
<h2 id="原因">原因</h2>
<p>首次在计算机上启动 Windows PowerShell 时，现用执行策略很可能是 Restricted（默认设置）。Restricted 策略不允许任何脚本运行，以防止执行不信任的脚本。</p>
<h2 id="解决">解决</h2>
<p>在 Windows PowerShell 执行以下命令：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure></div>
<h2 id="效果">效果</h2>
<p>再次执行 <code>vue --version</code> 命令，可正常查看 Vue 版本：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/22/2UpOySQuL3ev5to.png"
                      style="zoom: 50%;"
                >
<h2 id="引用">引用</h2>
<ul>
<li><a class="link"   href="https://cloud.tencent.com/developer/article/1612513" >https://cloud.tencent.com/developer/article/1612513 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>PowerShell</tag>
      </tags>
  </entry>
  <entry>
    <title>Once Upon a Time in America</title>
    <url>/2024/01/19/Once-Upon-a-Time-in-America/</url>
    <content><![CDATA[<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/19/y9MTUVfmBbJcC5s.jpg"
                      style="zoom: 200%;" 
                >
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 报错：无法创建 index.lock 文件，因其已存在。</title>
    <url>/2024/01/25/Git-%E6%8A%A5%E9%94%99%EF%BC%9A%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA-index-lock-%E6%96%87%E4%BB%B6%EF%BC%8C%E5%9B%A0%E5%85%B6%E5%B7%B2%E5%AD%98%E5%9C%A8/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>使用 Git 向 Github 部署代码时，出现如下报错：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/25/VTOAzyM2Jm9pEWH.png"
                      alt=""
                ></p>
<h2 id="原因">原因</h2>
<p>有两个 Git 命令同时运行，可能一种来自命令提示符，另一种来自 IDE 。</p>
<h2 id="解决">解决</h2>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/25/V2x6Msj5KSDqFp3.png"
                      alt=""
                ><br>
删除报错信息对应路径下已存在的 <code>index.lock</code> 文件即可。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a class="link"   href="https://stackoverflow.com/questions/38004148/another-git-process-seems-to-be-running-in-this-repository" >https://stackoverflow.com/questions/38004148/another-git-process-seems-to-be-running-in-this-repository <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 隐藏特定文章</title>
    <url>/2024/01/25/Hexo-%E9%9A%90%E8%97%8F%E7%89%B9%E5%AE%9A%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>写博客时有隐藏特定文章的需求</p>
<h2 id="解决">解决</h2>
<p>安装并配置 <code>hexo-hide-posts</code> 插件：</p>
<ul>
<li>
<p>在站点根目录下执行 <code>npm install hexo-hide-posts --save</code> 命令</p>
</li>
<li>
<p>在站点根目录下的 <code>_config.yml</code> 文件中添加如下配置：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-hide-posts</span></span><br><span class="line"><span class="attr">hide_posts:</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">hidden</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span></span><br><span class="line">  <span class="comment"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span></span><br><span class="line">  <span class="comment"># 留空则默认全部隐藏</span></span><br><span class="line">  <span class="attr">public_generators:</span> []</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span></span><br><span class="line">  <span class="attr">noindex:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<p>之后写作文章时，在文章属性中添加 <code>hidden: true</code> 即可隐藏文章，形如：</p>
<div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#x27;Hidden Post&#x27;</span><br><span class="line">date: &#x27;2024/01/25 16:21:16&#x27;</span><br><span class="line"><span class="section">hidden: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></div>
<p>若要查看隐藏文章，可以运行 <code>hexo hidden:list</code> 命令来获取当前所有的已隐藏文章列表及其信息，并通过文章链接访问。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a class="link"   href="https://blog.garryde.com/archives/37712.html" >https://blog.garryde.com/archives/37712.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat 双击 startup.bat 闪退</title>
    <url>/2024/01/31/Tomcat%E5%8F%8C%E5%87%BBstartup-bat%E9%97%AA%E9%80%80/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>在没有其他进程占用 8080 端口的情况下，双击 Tomcat 的 <code>startup.bat</code> 脚本发生闪退，无法启动。</p>
<h2 id="原因">原因</h2>
<p>未配置 <code>JAVA_HOME</code> 环境变量。</p>
<blockquote>
<p>问题排查过程：</p>
<ul>
<li>在 <code>startup.bat</code> 文件末尾添加一行 <code>pause</code> ，避免 Tomcat 立即退出；</li>
<li>双击 <code>startup.bat</code> ，尝试启动；</li>
<li>未成功启动，终端中提示 <code>JAVA_HOME</code> 与 <code>jre</code> 均未配置，需至少配置二者其一。</li>
</ul>
</blockquote>
<h2 id="解决">解决</h2>
<ul>
<li>方法一：配置 Windows 系统 <code>JAVA_HOME</code> 环境变量（推荐）</li>
<li>方法二：在 <code>startup.bat</code> 文件开头添加 <code>SET JAVA_HOME=Java安装目录</code></li>
</ul>
<h2 id="参考">参考</h2>
<ul>
<li><a class="link"   href="https://blog.51cto.com/u_14783151/2899251" >https://blog.51cto.com/u_14783151/2899251 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/qq496013218/article/details/74517593" >https://blog.csdn.net/qq496013218/article/details/74517593 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 博客中的 Markdown 脚注渲染问题</title>
    <url>/2024/01/25/Markdown-%E8%84%9A%E6%B3%A8%E6%B8%B2%E6%9F%93%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>Hexo 博客无法正常渲染 Markdown 脚注，如下图所示：</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/25/boT1YRUWje6kIHD.png"
                      alt="Typora 渲染效果"
                ><figcaption>Typora 渲染效果</figcaption></figure></p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/25/EbtSNxAl4hr681y.png"
                      alt="Hexo 网页渲染效果"
                ><figcaption>Hexo 网页渲染效果</figcaption></figure></p>
<h2 id="原因">原因</h2>
<p>Hexo 默认 Markdown 渲染插件为 <code>hexo-renderer-marked</code> ，而 <code>marked.js</code> 不支持脚注。</p>
<h2 id="解决">解决</h2>
<p>改用支持脚注的 Markdown 渲染插件，如 <code>hexo-renderer-markdown-it</code> 。</p>
<ol>
<li>
<p>在 Hexo 根目录打开 Git Bash ，依次执行以下命令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save <span class="comment"># 卸载 marked 插件</span></span><br><span class="line">npm i hexo-renderer-markdown-it --save <span class="comment"># 安装 markdown-it 插件</span></span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>在 Hexo 根目录打开 <code>_config.yml</code> 文件，添加如下配置信息：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line">    <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>重新生成静态文件，刷新配置信息使其生效。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></div>
</li>
</ol>
<h2 id="效果">效果</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/25/5YH4T6U9VxgkBcq.png"
                      style="zoom:50%;" 
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/01/25/Gv3SotxEdrMzXpi.png"
                      style="zoom:50%;" 
                >
<p>点击脚注可正常跳转。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a class="link"   href="https://github.com/ppoffice/hexo-theme-icarus/issues/572" >https://github.com/ppoffice/hexo-theme-icarus/issues/572 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://seayj.cn/articles/33818/" >https://seayj.cn/articles/33818/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows cmd 执行 Java 命令无返回信息</title>
    <url>/2024/02/18/Windows-cmd%E6%89%A7%E8%A1%8Cjava%E5%91%BD%E4%BB%A4%E6%97%A0%E8%BF%94%E5%9B%9E%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>在 Windows 命令行中无法执行 Java 命令且没有任何返回信息：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/02/18/rmNVClcep816dXR.png"
                      style="zoom:50%;" 
                >
<h2 id="原因">原因</h2>
<p>装了多个 jdk 的话，系统环境变量的第一行可能会出现 <code>C:\ProgramData\Oracle\Java\javapath</code> 路径，系统按该路径查找 jdk 。然而该路径可能并不真实存在，因此命令行中的 Java 命令会因找不到 jdk 而并未运行。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/02/18/3XM9B4wfPOlsyUi.png"
                      style="zoom:50%;" 
                >
<h2 id="解决">解决</h2>
<p>将自定义的 <code>%JAVA_HOME%\bin\</code> 路径移至第一行，让系统按该路径查找 jdk 。</p>
<h2 id="参考">参考</h2>
<ul>
<li><a class="link"   href="https://blog.csdn.net/qq_41999034/article/details/111604649" >https://blog.csdn.net/qq_41999034/article/details/111604649 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Windows环境变量</tag>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
